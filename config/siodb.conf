# SIODB instance configuration file

################## SIODB SERVER PARAMETERS ####################################

# Listening port for IPv4 client connections
# 0 means do not listen
ipv4_port = 50000

# Listening port for IPv6 client connections
# 0 means do not listen
ipv6_port = 0

# Data storage directory
data_dir = /var/lib/siodb/siodb/data

# Backlog value for the admin connection listener
admin_connection_listener_backlog = 10

# Max. number of admin connections
max_admin_connections = 10

# Backlog value for the user connection listener
user_connection_listener_backlog = 10

# Max. number of user connections
max_user_connections = 100

# Interval in seconds between the dead connection cleanups in the Siodb process
dead_connection_cleanup_interval = 15

# Allow group permissions on the config files
allow_group_permissions_on_config_files = true

################## IOMGR GENERAL PARAMETERS ###################################

# IO Manager listening port for IPv4 SQL connections
# 0 means do not listen
iomgr.ipv4_port = 50001

# IO Manager listening port for IPv6 SQL connections
# 0 means do not listen
iomgr.ipv6_port = 0

# IO Manager listening port for IPv4 REST connections
# 0 means do not listen
iomgr.rest.ipv4_port = 50002

# IO Manager listening port for IPv6 REST connections
# 0 means do not listen
iomgr.rest.ipv6_port = 0

# IO Manager worker thead number
iomgr.worker_thread_number = 2

# Maximum number of users
iomgr.max_users = 8192

# Maximum number of databases
iomgr.max_databases = 65536

# Maximum number of tables per database
# (used when database is created)
iomgr.max_tables_per_db = 65536

# Capacity of the block cache (in 10M blocks)
iomgr.block_cache_capacity = 103

# Interval in seconds between the dead connection cleanups in the IO Manager process
iomgr.dead_connection_cleanup_interval = 15

# Maximum JSON payload size in the REST request in kilobytes
# Suffixes k, K, m, M, g, G switch measure unit to KiB, MiB and GiB respectively.
iomgr.max_json_payload_size = 1024

################## REST SERVER PARAMETERS ####################################

# Enables or disables REST Server service
enable_rest_server = no

# IPv4 HTTP port number
# 0 means do not listen
rest_server.ipv4_http_port = 50080

# IPv4 HTTPS port number
# 0 means do not listen
rest_server.ipv4_https_port = 50443

# IPv6 HTTP port number
# 0 means do not listen
rest_server.ipv6_http_port = 0

# IPv6 HTTPS port number
# 0 means do not listen
rest_server.ipv6_https_port = 0

# Path to the TLS certificate file
#rest_server.tls_certificate = cert.pem

# Path to the TLS certificate chain file
# If both rest_server.tls_certificate and tls_certificate_chain are set,
# then rest_server.tls_certificate_chain is used.
#rest_server.tls_certificate_chain = certChain.pem

# Path to the TLS private key file
#rest_server.tls_private_key = key.pem

# HTTP chunk size in bytes. Suffixes `k`, `K`, `m`, `M` change units
# to the kilobytes and megabytes respectively.
rest_server.chunk_size = 64K

# Maximum buffer size to process request payload to IOMgr in bytes. Suffixes `k`, `K`, `m`, `M`
# change units to the kilobytes and megabytes respectively.
rest_server.request_payload_buffer_size = 1k

# Read deadline timeout in seconds for connections to IOMgr
rest_server.iomgr_read_timeout = 5

################## DATA ENCRYPTION PARAMETERS #################################

# Encryption default cipher id (aes128 is used if not set)
encryption.default_cipher_id = aes128

# Encryption algorithm used to encrypt instance level data
# (encryption.default_cipher_id is used if not set)
encryption.master_cipher_id = aes128

# Encryption key used to encrypt and decrypt instance level data
# /etc/siodb/instances/<instance-name>/master_key is used if not set
# encryption.master_key = /etc/siodb/instances/siodb/master_key

# Encryption algorithm used to encrypt newly created system database
encryption.system_db_cipher_id = aes128

# Should encrypted connection be used for client (yes(default)/no)
client.enable_encryption = no

# Client connection OpenSSL certificate
#client.tls_certificate = cert.pem

# Client connection OpenSSL certificate chain
# If both client.tls_certificate and tls_certificate_chain are set,
# then client.tls_certificate_chain is used.
#client.tls_certificate_chain = certChain.pem

# Client secure connection certificate/certificate chain private key
#client.tls_private_key = key.pem

################## LOG PARAMETERS #############################################

# Log channels
log_channels = file, console

# Log channel 'file' settings
log.file.type = file
log.file.destination = /var/log/siodb/siodb
log.file.max_file_size = 10M
log.file.exp_time = 1d
log.file.severity = info

# Log channel 'console' settings
log.console.type = console
log.console.destination = stdout
log.console.severity = trace
