// Copyright (C) 2019-2020 Siodb GmbH. All rights reserved.
// Use of this source code is governed by a license that can be found
// in the LICENSE file.

// @file Contains protobuf messages used to communicate with IOManager service.

syntax = "proto3";

import "CommonMessages.proto";

package siodb.iomgr_protocol;

option optimize_for=SPEED;
option go_package = ".;siodbproto";

/** Request message. */
message DatabaseEngineRequest {

    /** Request ID */
    uint64 request_id = 1;

    /** Request text */
    string text = 2;
}

/** Tag key-value pair. */
message Tag {
    /** Tag name */
    string name = 1;

    /** Tag value variants */
    oneof value {
        /** Boolean value */
        bool bool_value = 2;

        /** String value */
        string string_value = 3;
    }
}

/** Response from IO Manager. */
message DatabaseEngineResponse {

    /** Corresponding request ID. */
    uint64 request_id = 1;

    /** Messages from IO manager. */
    repeated StatusMessage message = 2;

    /** Free text messages without status code. */
    repeated string freetext_message = 3;

    /** Description of columns in this data set. */
    repeated ColumnDescription column_description = 4;

    /** Response identifier in this series of responses. Starts with 0. */
    uint32 response_id = 5;

    /**
     * Number of reponses in series.
     * May be sent only in first response.
     * Zero value means single response.
     */
    uint32 response_count = 6;

    /** Indicates that affected row count is present. */
    bool has_affected_row_count = 7;

    /** Affected row count. */
    uint64 affected_row_count = 8;

    /** Tags. */
    repeated Tag tag = 9;

    /** REST HTTP status code */
    uint32 rest_status_code = 10;
}

/** Begin authentication request */
message BeginAuthenticateUserRequest {

    /** User request */
    string user_name = 1;
}

/** Begin authentication response */
message BeginAuthenticateUserResponse {

    /** Indication that session is started */
    bool session_started = 1;

    /** Message from IO manager. Set if error has occurred. */
    StatusMessage message = 2;
}

/** Authenticate user request */
message AuthenticateUserRequest {

    /** Challenge */
    bytes challenge = 1;

    /** Signed challenge user from a user */
    bytes signature = 2;
}

/** Authenticate user response */
message AuthenticateUserResponse {

    /** Indication that user is authenticated. */
    bool authenticated = 1;

    /** Message from IO manager. Set if error has occurred */
    StatusMessage message = 2;

    /** ID of started session. */
    string session_id = 3;

    /** Server information */
    repeated string server_info = 4;
}

/** Rest verbs */
enum RestVerb {
    GET = 0;
    POST = 1;
    PUT = 2;
    PATCH = 3;
    DELETE = 4;
};

/** Database object type */
enum DatabaseObjectType {
    DATABASE = 0;
    TABLE = 1;
    ROW = 2;
};

/** Request from REST server to IOMgr. */
message DatabaseEngineRestRequest {

    /** Request ID */
    uint64 request_id = 1;

    /** REST verb */
    RestVerb verb = 2;

    /** Object type */
    DatabaseObjectType object_type = 3;

    /** Numeric object ID */
    uint64 object_id = 4;

    /** Object name */
    string object_name = 5;

    /** User name */
    string user_name = 6;

    /** Token */
    string token = 7;
}

/** User token validation request */
message ValidateUserTokenRequest {

    /** User name */
    string user_name = 1;

    /** User token */
    string token = 2;
}
